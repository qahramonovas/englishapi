E-english:
    -user model            ✅
    -db: schema            ✅
    -send email + celery   ✅
    -forget password
    -error messages        ✅
    -login                 ✅
    -register              ✅


url:
    ADMIN:
        login                 ✅
        email                 ✅
        verify                ✅
        register              ✅
        logout                ✅

        panel/unit/list       ✅
        panel/unit/create     ✅
        panel/unit/delete     ✅
        panel/unit/update     ✅
        panel/unit/search     ✅

        panel/book/list       ✅
        panel/book/create     ✅
        panel/book/delete     ✅
        panel/book/update     ✅
        panel/book/search     ✅

        panel/vocab/list       ✅
        panel/vocab/create     ✅
        panel/vocab/create_by_excel
        panel/vocab/delete     ✅
        panel/vocab/update     ✅
        panel/vocab/search     ✅


    USER:
        unit/filter                   POST (book_id , unit_id)
        unit/vocab/check              POST (vocab_id , word)
            mset(user_id , {"correct" : 0 , "incorrect":0 , "unit_id":1})
            mget(user_id)
            mset(user_id , {"correct" : 0+1 , "incorrect":0 , "unit_id":1})

        unit/list/<int:book_id>       GET ()

        unit/try/filter               POST (type , amount , units_id) -> filter vocabs
        unit/try/check                POST (vocab_id , word)
            mset(user_id , {"correct" : 0 , "incorrect":0 , "unit_id":1})
            mget(user_id)
            mset(user_id , {"correct" : 0+1 , "incorrect":0 , "unit_id":1})
            VocabTestResult.save()





======================================================























project path : /var/www/sarvinoz/englishapi



-2) venv activate | pip install gunicorn

-1) SETTINGS : STATIC_ROOT = os.path.join(BASE_DIR , "static")

0) python manage.py collectstatic

1)
    nano /etc/nginx/sites-available/englishapi_sarvinoz

    server {
        listen       8001;
        server_name  188.225.72.20;

        location = /favicon.ico { access_log off; log_not_found off; }

        location /static/ {
            root /var/www/sarvinoz/englishapi;
        }

        location /media/ {
            root /var/www/sarvinoz/englishapi;
        }

        location / {
            include proxy_params;
            proxy_pass http://unix:/var/www/sarvinoz/englishapi/falcon.sock;
        }
    }

2)
    ln -s /etc/nginx/sites-available/englishapi_sarvinoz /etc/nginx/sites-enabled/




3) nano /etc/systemd/system/englishapi_sarvinoz.service


[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/sarvinoz/englishapi
ExecStart=/var/www/sarvinoz/englishapi/.venv/bin/gunicorn --workers 3 --bind unix:/var/www/sarvinoz/englishapi/falcon.sock root.wsgi:application

[Install]
WantedBy=multi-user.target



4) systemctl enable englishapi_sarvinoz.service
5) systemctl start englishapi_sarvinoz.service
5) systemctl restart englishapi_sarvinoz.service
6) systemctl status englishapi_sarvinoz.service

systemctl enable nginx.service
                    systemctl status nginx.service



systemctl restart expense_celery.service
systemctl stop expense_celery.service

1. comp -> github, gitlab, bitbucket -> server

2. comp -> server



scp file root@IP:/var/www
python3 manage.py runserver 0:8004








ufw:
    sudo ufw status
    sudo ufw allow 'Nginx HTTP'
    sudo ufw allow 22
    sudo ufw allow 80
    sudo ufw allow 443
    sudo ufw allow 8000
    sudo ufw reload

terminalda ishlatish kerak ohirida:
    sudo nginx -t
    ls -l /var/www/sarvinoz/englishapi/falcon.sock
    sudo chown www-data:www-data /var/www/sarvinoz/englishapi/falcon.sock
    sudo chmod 660 /var/www/sarvinoz/englishapi/falcon.sock






3.1) nano /etc/systemd/system/expense_celery.service

[Unit]
Description=Celery Service
After=network.target
Requires=expense_api.service

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/sarvinoz/Expenses
ExecStart=/var/www/sarvinoz/Expenses/.venv/bin/celery -A root worker --loglevel=info
Restart=always

[Install]
WantedBy=multi-user.target








